swagger: "2.0"
info:
  title: Import Service
  description: |
    Check out the [Catalog Integration Guide > JSON Import](/guides/integrations/catalog-integration/bulk-file-import) or start with [creating an import](/api-reference/import-api/import/createimport).
  version: "1.0.0"
  contact:
    name: retail.red API
    url: https://retail.red
    email: mail@retail.red
host: import.shopgate.io
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /merchants/{merchantCode}/imports:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
    post:
      tags:
       - Import
      summary: Create import
      operationId: createImport
      description: Create a new import
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              source:
                type: string
                maxLength: 255
          x-examples:
            application/json:
              source: aName
      responses:
        201:
          description: Import created
          schema:
            type: object
            properties:
              ref:
                type: string
          examples:
            application/json:
              ref: 87eff434-4f89-4d83-a8c6-117e10817034
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/ValidationErrors"
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"
    get:
      tags:
       - Import
      summary: Get imports
      description: Get all imports
      operationId: getImports
      parameters:
        - in: query
          name: filters
          description: "Filter string. Supported filters: ref, status"
          type: string
        - $ref: "#/parameters/PaginationLimit"
        - $ref: "#/parameters/PaginationOffset"
        - $ref: "#/parameters/Sort"
      responses:
        200:
          description: List of imports
          schema:
            type: object
            properties:
              meta:
                $ref: "#/definitions/Pagination"
              imports:
                type: array
                items:
                  $ref: "#/definitions/Import"
          examples:
            application/json:
              imports:
              - createDate: '2021-02-09T17:59:37.803Z'
                endDate: '2021-02-09T17:59:37.803Z'
                entityFiles:
                - context: catalog1
                  created:
                    dispatched: 3
                    failed: 3
                    succeeded: 3
                  deleted:
                    dispatched: 3
                    failed: 3
                    succeeded: 3
                  entity: product
                  importStrategy: full
                  scopes:
                  skipped: 1
                  total: 10
                  updated:
                    dispatched: 3
                    failed: 3
                    succeeded: 3
                ref: 87eff434-4f89-4d83-a8c6-117e10817034
                scriptFinishDate: '2021-02-09T17:59:37.803Z'
                source: aName
                startDate: '2021-02-09T17:59:37.803Z'
                status: finished
              meta:
                limit: 10
                offset: 0
                totalItemCount: 1
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/SwaggerValidationError"
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"

  /merchants/{merchantCode}/imports/{importRef}:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - $ref: "#/parameters/importRef"
    post:
      tags:
       - Import
      operationId: triggerImport
      summary: Trigger import
      description: Triggers a formerly created import
      responses:
        204:
          description: Imported started
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: Import not found
          schema:
            $ref: "#/definitions/NotFoundError"

  /merchants/{merchantCode}/imports/{importRef}/urls:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
    post:
      tags:
       - Import
      operationId: getSignedUrl
      summary: Get signed url
      description: Get a signed URL for file
      parameters:
        - $ref: "#/parameters/importRef"
        - in: body
          name: body
          schema:
            type: object
            required:
              - entity
            properties:
              entity:
                type: string
                enum:
                  [
                    "product",
                    "category",
                    "attribute",
                    "inventory",
                    "customer",
                    "segment",
                    "segmentMember",
                  ]
              catalogCode:
                type: string
                description: "Required for product and category entity as they are sub entities of a catalog"
              locationCodes:
                type: array
                description: "Optional for an inventory import with strategy 'full'. It performs a full import only for the given locations."
                items:
                  description: Shopgate location code
                  type: string
              importStrategy:
                type: string
                default: full
                enum:
                  - full
                  - partial
              operation:
                type: string
                default: upload
                enum:
                  - upload
                  - download
          x-examples:
            application/json:
              entity: product
              catalogCode: catalog1
              locationCodes: []
              importStrategy: full
              operation: upload
      responses:
        201:
          description: New URL created
          schema:
            type: object
            properties:
              url:
                type: string
          examples:
            application/json:
              url: https://some.url
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"
  /merchants/{merchantCode}/imports/{importRef}/logs:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
    get:
      tags:
       - Import
      operationId: getImportLogs
      summary: Get import logs
      description: Get logs for an import
      parameters:
        - $ref: "#/parameters/importRef"
        - $ref: "#/parameters/PaginationLimit"
        - $ref: "#/parameters/PaginationOffset"
      responses:
        200:
          description: Logs for the import
          schema:
            type: object
            properties:
              meta:
                $ref: "#/definitions/Pagination"
              imports:
                type: array
                items:
                  type: string
          examples:
            getImportLogs:
              meta:
                limit: 10,
                offset: 0,
                totalItemCount: 1
              imports:
                - Category 'men' not found
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"
  /merchants/{merchantCode}/imports/{importRef}/logs.txt:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
    get:
      produces:
        - text/plain
      tags:
       - Import
      operationId: getImportLogFile
      summary: Get import log file
      description: Get log file for an import
      parameters:
        - $ref: "#/parameters/importRef"
      responses:
        200:
          description: Log file for the import (txt)
        403:
          description: Forbidden error
          schema:
            $ref: "#/definitions/ForbiddenError"

  /imports/{importRef}/entityFiles/entities/{entity}:
    put:
      tags:
       - Import
      x-internal: true
      summary: Update entity metrics
      operationId: updateEntity
      description: Set Dispatch Count of an Entity File per Specific Import
      parameters:
        - $ref: "#/parameters/importRef"
        - name: entity
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            required:
              - total
              - created
              - updated
              - deleted
            properties:
              context:
                type:
                  - string
                  - "null"
              total:
                type: integer
                minimum: 0
              created:
                type: object
                required:
                  - dispatched
                properties:
                  dispatched:
                    type: integer
                    minimum: 0
              updated:
                type: object
                required:
                  - dispatched
                properties:
                  dispatched:
                    type: integer
                    minimum: 0
              deleted:
                type: object
                required:
                  - dispatched
                properties:
                  dispatched:
                    type: integer
                    minimum: 0
      responses:
        200:
          description: Successfully updated.
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/SwaggerValidationError"
  /imports/{importRef}:
    delete:
      tags:
       - Import
      x-internal: true
      operationId: deleteImport
      summary: Delete import
      description: Delete an import
      parameters:
        - $ref: "#/parameters/importRef"
      responses:
        204:
          description: Successfully deleted.
        404:
          description: Import not found
          schema:
            $ref: "#/definitions/NotFoundError"
  /imports/{importRef}/status:
    post:
      tags:
       - Import
      x-internal: true
      operationId: updateImportStatus
      summary: Update import status
      description: Update status of the import
      parameters:
        - $ref: "#/parameters/importRef"
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum:
                  - processing
                  - aborted
      responses:
        204:
          description: Successfully set status.
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/SwaggerValidationError"
        404:
          description: Import not found
          schema:
            $ref: "#/definitions/NotFoundError"
  /imports/{importRef}/entityFiles:
    patch:
      tags:
       - Import
      x-internal: true
      summary: Update entity file metrics
      operationId: updateEntityFiles
      description: Update Counts of Entity File for Specific Import
      parameters:
        - $ref: "#/parameters/importRef"
        - in: body
          name: body
          schema:
            type: object
            required:
              - entityFiles
            properties:
              entityFiles:
                type: array
                items:
                  type: object
                  required:
                    - entity
                    - counterType
                    - count
                  properties:
                    entity:
                      type: string
                    context:
                      type:
                        - string
                        - "null"
                    operation:
                      type: string
                      enum:
                        - created
                        - updated
                        - deleted
                    counterType:
                      type: string
                      enum:
                        - succeeded
                        - failed
                        - skipped
                    count:
                      type: integer
      responses:
        200:
          description: Successfully updated.
          schema:
            $ref: "#/definitions/AdditionResponse"
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/SwaggerValidationError"
        404:
          description: Import not found
          schema:
            $ref: "#/definitions/NotFoundError"
  /checkAborted:
    post:
      tags:
       - Import
      x-internal: true
      operationId: checkAborted
      summary: Check aborted
      description: Checks for aborted imports
      responses:
        204:
          description: Successfully set aborted
        400:
          description: Validation error
          schema:
            $ref: "#/definitions/SwaggerValidationError"
parameters:
  importRef:
    in: path
    name: importRef
    type: string
    required: true
  PaginationLimit:
    description: the limit of entries of one page
    in: query
    name: limit
    type: integer
    default: 100
  PaginationOffset:
    description: the offset where to start the page
    in: query
    name: offset
    type: integer
    default: 0
  Sort:
    description: sorting of the products (sequenceId only works with filter catalogCode)
    in: query
    name: sort
    type: string
definitions:
  ActionCounts:
    type: object
    properties:
      dispatched:
        type: integer
        example: 3
      succeeded:
        type: integer
        example: 3
      failed:
        type: integer
        example: 3
    example:
      dispatched: 3
      succeeded: 3
      failed: 3
  AdditionResponse:
    type: object
    properties:
      errors:
        $ref: "#/definitions/ErrorList"
  EntityFile:
    type: object
    required:
      - entity
      - created
      - updated
      - deleted
    properties:
      entity:
        type: string
      context:
        type:
          - string
          - "null"
      importStrategy:
        type: string
        default: full
        enum:
          - full
          - partial
      total:
        type: integer
      skipped:
        type: integer
      created:
        $ref: "#/definitions/ActionCounts"
      updated:
        $ref: "#/definitions/ActionCounts"
      deleted:
        $ref: "#/definitions/ActionCounts"
      scopes:
        type: string
    example:
      entity: product
      context: catalog1
      importStrategy: full
      total: 10
      skipped: 1
      created:
        $ref: "#/definitions/ActionCounts/example"
      updated:
        $ref: "#/definitions/ActionCounts/example"
      deleted:
        $ref: "#/definitions/ActionCounts/example"
      scopes: null
  ErrorList:
    type: array
    items:
      $ref: "#/definitions/ErrorListObject"
  ErrorListObject:
    type: object
    properties:
      code:
        type: number
        example: 400
      entity:
        type: string
        example: planet
      entityId:
        type:
          - string
          - object
        example: pluto
      entityIndex:
        type: number
        example: 7
      reason:
        type: string
        example: "Planet pluto was not found (did you mean dwarf planet pluto?)"
      subentityPath:
        type: array
        items:
          type:
            - string
            - number
  ForbiddenError:
    type: object
    required:
      - message
      - code
    properties:
      code:
        type: string
        example: Forbidden
      message:
        type: string
        example: No access to merchant 1
  Import:
    type: object
    properties:
      ref:
        type: string
        example: 87eff434-4f89-4d83-a8c6-117e10817034
      status:
        type: string
        enum:
          - new
          - started
          - processing
          - finished
          - aborted
        example: finished
      source:
        type: string
        example: aName
      createDate:
        type: string
        example: '2021-02-09T17:59:37.803Z'
      startDate:
        type: string
        example: '2021-02-09T17:59:37.803Z'
      scriptFinishDate:
        type: string
        example: '2021-02-09T17:59:37.803Z'
      endDate:
        type: string
        example: '2021-02-09T17:59:37.803Z'
      entityFiles:
        type: array
        items:
          $ref: "#/definitions/EntityFile"
    example:
      ref:
        $ref: '#/definitions/Import/properties/ref/example'
      status:
        $ref: '#/definitions/Import/properties/status/example'
      source:
        $ref: '#/definitions/Import/properties/source/example'
      createDate:
        $ref: '#/definitions/Import/properties/createDate/example'
      startDate:
        $ref: '#/definitions/Import/properties/startDate/example'
      scriptFinishDate:
        $ref: '#/definitions/Import/properties/scriptFinishDate/example'
      endDate:
        $ref: '#/definitions/Import/properties/endDate/example'
      entityFiles:
        - $ref: '#/definitions/EntityFile/example'
  NotFoundError:
    type: object
    required:
      - message
      - code
    properties:
      code:
        type: string
        example: NotFound
      message:
        type: string
        example: Merchant not found
  ValidationErrors:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: "#/definitions/ValidationError"
  ValidationError:
    type: object
    required:
      - field
      - code
      - message
    properties:
      field:
        type: string
        description: 'the parameter-field, that failed to validate, like "sequenceId"'
      value:
        type: string
        description: 'the value, that was sent, like "xxx"'
      code:
        type: string
        description: machine readable error code
        enum:
          - INVALID_TOKEN
          - ALREADY_CONNECTED
      message:
        type: string
        description: human readable error code
  SwaggerValidationError:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
      error:
        type: object
        required:
          - message
        properties:
          paramName:
            type: string
            description: 'the parameter-field, that failed to validate, like "userId"'
          paramValue:
            description: 'the value, that was sent, like "xxx"'
          code:
            type: string
            description: machine readable error code
            enum:
              - SCHEMA_VALIDATION_FAILED
              - ENUM_MISMATCH
              - MAXIMUM
              - MAXIMUM_EXCLUSIVE
              - MINIMUM
              - MINIMUM_EXCLUSIVE
              - MULTIPLE_OF
              - ARRAY_LENGTH_LONG
              - ARRAY_LENGTH_SHORT
              - ARRAY_ADDITIONAL_ITEMS
              - ARRAY_UNIQUE
              - MAX_LENGTH
              - MIN_LENGTH
              - MAX_PROPERTIES
              - MIN_PROPERTIES
              - OBJECT_MISSING_REQUIRED_PROPERTY
              - OBJECT_PROPERTIES_MAXIMUM
              - OBJECT_PROPERTIES_MINIMUM
              - OBJECT_ADDITIONAL_PROPERTIES
              - OBJECT_DEPENDENCY_KEY
              - ONE_OF_MISSING
              - ONE_OF_MULTIPLE
              - NOT_PASSED
              - INVALID_FORMAT
              - UNKNOWN_FORMAT
              - PATTERN
          message:
            type: string
            description: human readable error code
          results:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: "#/definitions/ValidationErrorResult"
              warnings:
                type: array
  ValidationErrorResult:
    type: object
    properties:
      code:
        type: string
        description: machine readable error code
        enum:
          - ENUM_MISMATCH
          - MAXIMUM
          - MAXIMUM_EXCLUSIVE
          - MINIMUM
          - MINIMUM_EXCLUSIVE
          - MULTIPLE_OF
          - ARRAY_LENGTH_LONG
          - ARRAY_LENGTH_SHORT
          - ARRAY_ADDITIONAL_ITEMS
          - ARRAY_UNIQUE
          - MAX_LENGTH
          - MIN_LENGTH
          - MAX_PROPERTIES
          - MIN_PROPERTIES
          - OBJECT_MISSING_REQUIRED_PROPERTY
          - OBJECT_PROPERTIES_MAXIMUM
          - OBJECT_PROPERTIES_MINIMUM
          - OBJECT_ADDITIONAL_PROPERTIES
          - OBJECT_DEPENDENCY_KEY
          - ONE_OF_MISSING
          - ONE_OF_MULTIPLE
          - NOT_PASSED
          - INVALID_FORMAT
          - UNKNOWN_FORMAT
          - PATTERN
      message:
        type: string
        description: human readable error code
      description:
        type: string
        example: human readable error code
      path:
        type: array
        items:
          type: string
  Pagination:
    type: object
    properties:
      limit:
        type: number
        example: 10
      offset:
        type: number
        example: 0
      totalItemCount:
        type: number
        example: 1
    example:
      limit: 10
      offset: 0
      totalItemCount: 1
